{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Schen\\\\thinkful\\\\vscode\\\\react-projects\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Edit\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs';\nimport { readDeck, readCard, updateCard } from '../../utils/api';\nimport CardForm from '../CardForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditCard = () => {\n  _s();\n\n  let {\n    deckId\n  } = useParams();\n  let {\n    cardId\n  } = useParams();\n  let history = useHistory();\n  let [deck, setDeck] = useState({});\n  let [card, setCard] = useState({});\n  let [front, setFront] = useState('');\n  let [back, setBack] = useState('');\n  let edit = true;\n  useEffect(() => {\n    const fetchData = async () => {\n      let data = await readDeck(deckId);\n      let deckData = await data;\n      let cardData = await readCard(cardId);\n      setDeck(deckData);\n      setCard(cardData);\n      setFront(cardData.front);\n      setBack(cardData.back);\n    };\n\n    fetchData();\n  }, [cardId, deckId]);\n\n  const handleSubmit = async () => {\n    card.front = front;\n    card.back = back;\n    await updateCard(card);\n    history.push(`/${deckId}/view`);\n  };\n\n  if (card.id) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        deck: deck,\n        cardId: cardId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CardForm, {\n        deck: deck,\n        front: front,\n        setFront: setFront,\n        back: back,\n        setBack: setBack,\n        handleSubmit: handleSubmit,\n        edit: edit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }, this);\n};\n\n_s(EditCard, \"VIMDa9qVyQnL2WeeG505mWUWrNM=\", false, function () {\n  return [useParams, useParams, useHistory];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["C:/Users/Schen/thinkful/vscode/react-projects/Project_Flashcards_Qualified_1/src/Layout/Edit/EditCard.js"],"names":["React","useEffect","useState","useParams","useHistory","Breadcrumbs","readDeck","readCard","updateCard","CardForm","EditCard","deckId","cardId","history","deck","setDeck","card","setCard","front","setFront","back","setBack","edit","fetchData","data","deckData","cardData","handleSubmit","push","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,EAAmBC,UAAnB,QAAoC,kBAApC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,UAA5B,QAA6C,iBAA7C;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACvB,MAAI;AAACC,IAAAA;AAAD,MAAWR,SAAS,EAAxB;AACA,MAAI;AAACS,IAAAA;AAAD,MAAWT,SAAS,EAAxB;AACA,MAAIU,OAAO,GAAGT,UAAU,EAAxB;AACA,MAAI,CAACU,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAI,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAIoB,IAAI,GAAG,IAAX;AAEIrB,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMsB,SAAS,GAAG,YAAW;AACzB,UAAIC,IAAI,GAAG,MAAMlB,QAAQ,CAACK,MAAD,CAAzB;AACA,UAAIc,QAAQ,GAAG,MAAMD,IAArB;AACA,UAAIE,QAAQ,GAAG,MAAMnB,QAAQ,CAACK,MAAD,CAA7B;AACAG,MAAAA,OAAO,CAACU,QAAD,CAAP;AACAR,MAAAA,OAAO,CAACS,QAAD,CAAP;AACAP,MAAAA,QAAQ,CAACO,QAAQ,CAACR,KAAV,CAAR;AACAG,MAAAA,OAAO,CAACK,QAAQ,CAACN,IAAV,CAAP;AAEH,KATD;;AAUAG,IAAAA,SAAS;AACZ,GAZQ,EAYP,CAACX,MAAD,EAASD,MAAT,CAZO,CAAT;;AAcA,QAAMgB,YAAY,GAAG,YAAY;AAC7BX,IAAAA,IAAI,CAACE,KAAL,GAAaA,KAAb;AACAF,IAAAA,IAAI,CAACI,IAAL,GAAYA,IAAZ;AACA,UAAMZ,UAAU,CAACQ,IAAD,CAAhB;AACAH,IAAAA,OAAO,CAACe,IAAR,CAAc,IAAGjB,MAAO,OAAxB;AACH,GALD;;AAOJ,MAAGK,IAAI,CAACa,EAAR,EAAW;AACP,wBACI;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEf,IAAnB;AAAyB,QAAA,MAAM,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI,QAAC,QAAD;AACA,QAAA,IAAI,EAAEE,IADN;AAEA,QAAA,KAAK,EAAEI,KAFP;AAGA,QAAA,QAAQ,EAAEC,QAHV;AAIA,QAAA,IAAI,EAAEC,IAJN;AAKA,QAAA,OAAO,EAAEC,OALT;AAMA,QAAA,YAAY,EAAEM,YANd;AAOA,QAAA,IAAI,EAAEL;AAPN;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;;AAAC,sBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AACD,CAhDD;;GAAMZ,Q;UACSP,S,EACAA,S,EACDC,U;;;KAHRM,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport {readDeck, readCard, updateCard} from '../../utils/api';\r\nimport CardForm from '../CardForm';\r\n\r\nconst EditCard = () => {\r\nlet {deckId} = useParams();\r\nlet {cardId} = useParams();\r\nlet history = useHistory();\r\nlet [deck, setDeck] = useState({});\r\nlet [card, setCard] = useState({});\r\nlet [front, setFront] = useState('');\r\nlet [back, setBack] = useState('');\r\nlet edit = true;\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () =>{\r\n            let data = await readDeck(deckId);\r\n            let deckData = await data;\r\n            let cardData = await readCard(cardId)\r\n            setDeck(deckData);\r\n            setCard(cardData);\r\n            setFront(cardData.front);\r\n            setBack(cardData.back);\r\n\r\n        }\r\n        fetchData();\r\n    },[cardId, deckId])\r\n\r\n    const handleSubmit = async () => {\r\n        card.front = front;\r\n        card.back = back;\r\n        await updateCard(card);\r\n        history.push(`/${deckId}/view`)\r\n    }\r\n\r\nif(card.id){\r\n    return(\r\n        <div>\r\n            <Breadcrumbs deck={deck} cardId={cardId}/>\r\n\r\n            <CardForm \r\n            deck={deck}\r\n            front={front}\r\n            setFront={setFront}\r\n            back={back}\r\n            setBack={setBack}\r\n            handleSubmit={handleSubmit}\r\n            edit={edit}\r\n            />\r\n        </div>\r\n    );\r\n} return (<p>Loading...</p>)\r\n}\r\n\r\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}