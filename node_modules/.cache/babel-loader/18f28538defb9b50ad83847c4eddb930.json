{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Schen\\\\thinkful\\\\vscode\\\\react-projects\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ViewDeck\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs';\nimport { readDeck } from '../../utils/api';\nimport DeckHeader from \"./DeckHeader\";\nimport Cards from './Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst View = () => {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  useEffect(() => {\n    const getDeck = async () => {\n      const data = await readDeck(deckId);\n      let deckData = await data;\n      setDeck(deckData);\n    };\n\n    getDeck();\n  }, [deckId]);\n\n  if (deck) {\n    let {\n      cards\n    } = deck;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DeckHeader, {\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Cards, {\n          cards: cards,\n          deck: deck\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(View, \"pqWCJav3kUC8XZk7fLFUtoaBY1o=\", false, function () {\n  return [useParams];\n});\n\n_c = View;\nexport default View;\n\nvar _c;\n\n$RefreshReg$(_c, \"View\");","map":{"version":3,"sources":["C:/Users/Schen/thinkful/vscode/react-projects/Project_Flashcards_Qualified_1/src/Layout/ViewDeck/index.js"],"names":["React","useState","useEffect","useParams","Breadcrumbs","readDeck","DeckHeader","Cards","View","deckId","deck","setDeck","getDeck","data","deckData","cards"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAK;AAAA;;AACd,QAAM;AAACC,IAAAA;AAAD,MAAWN,SAAS,EAA1B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAGAC,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMU,OAAO,GAAG,YAAY;AACxB,YAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACI,MAAD,CAA3B;AACA,UAAIK,QAAQ,GAAI,MAAMD,IAAtB;AACAF,MAAAA,OAAO,CAACG,QAAD,CAAP;AACP,KAJG;;AAKAF,IAAAA,OAAO;AAEV,GARQ,EAQN,CAACH,MAAD,CARM,CAAT;;AAUJ,MAAIC,IAAJ,EAAS;AACL,QAAI;AAACK,MAAAA;AAAD,QAAUL,IAAd;AAGA,wBACI;AAAA,8BACA,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEK,KAAd;AAAqB,UAAA,IAAI,EAAEL;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH,GAdD,MAcO;AAAC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAA0B;AACjC,CA9BD;;GAAMF,I;UACeL,S;;;KADfK,I;AAgCN,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport {readDeck} from '../../utils/api'\r\n\r\nimport DeckHeader from \"./DeckHeader\";\r\nimport Cards from './Cards'\r\n\r\nconst View = () =>{\r\n    const {deckId} = useParams();\r\n    const [deck, setDeck] = useState({});\r\n    \r\n\r\n    useEffect( () => {\r\n        const getDeck = async () => {\r\n            const data = await readDeck(deckId);\r\n            let deckData =  await data;\r\n            setDeck(deckData);\r\n    }\r\n        getDeck();\r\n        \r\n    }, [deckId])\r\n\r\nif (deck){\r\n    let {cards} = deck\r\n\r\n\r\n    return(\r\n        <div>\r\n        <Breadcrumbs deck={deck}/>\r\n        <DeckHeader deck={deck}/>\r\n        <div>\r\n            <Cards cards={cards} deck={deck}/>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n} else {return(<p>Loading...</p>)}\r\n}\r\n\r\nexport default View;"]},"metadata":{},"sourceType":"module"}