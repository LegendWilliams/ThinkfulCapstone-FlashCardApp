{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Schen\\\\thinkful\\\\vscode\\\\react-projects\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Edit\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport Breadcrumbs from '../Breadcrumbs';\nimport { readDeck, updateDeck } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDeck = () => {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [name, setName] = useState(null);\n  const [description, setDescription] = useState('');\n  const history = useHistory();\n  useEffect(() => {\n    const getDeck = async () => {\n      const data = await readDeck(deckId);\n      let deckData = await data;\n      setDeck(deckData);\n      let name = await deckData.name;\n      setName(name);\n      let description = await deckData.description;\n      setDescription(description);\n    };\n\n    getDeck();\n  }, [deckId]);\n\n  const handleSubmit = async () => {\n    deck.description = description;\n    deck.name = name;\n    await updateDeck(deck);\n    history.goBack();\n  };\n\n  if (name !== null) {\n    console.log(deck);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit Deck: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              opacity: '50%'\n            },\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            id: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Deck Name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            className: \"mt-3\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"textarea\",\n            name: \"description\",\n            id: \"description\",\n            className: \"form-control\",\n            rows: \"3\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn mt-3\",\n        htmlFor: \"submit\",\n        style: {\n          border: '3px'\n        },\n        onClick: handleSubmit,\n        children: \"\\u2714 Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn mt-3\",\n          style: {\n            opacity: '50%'\n          },\n          children: \"\\u274CCancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  } else return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 15\n  }, this);\n};\n\n_s(EditDeck, \"Vk6OipuWdvD5uj521IFewLoqIVI=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["C:/Users/Schen/thinkful/vscode/react-projects/Project_Flashcards_Qualified_1/src/Layout/Edit/EditDeck.js"],"names":["React","useState","useEffect","useParams","Link","useHistory","Breadcrumbs","readDeck","updateDeck","EditDeck","deckId","deck","setDeck","name","setName","description","setDescription","history","getDeck","data","deckData","handleSubmit","goBack","console","log","opacity","e","target","value","border","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {useParams, Link, useHistory} from 'react-router-dom'\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport {readDeck, updateDeck} from '../../utils/api';\r\n\r\nconst EditDeck = () => {\r\n    const {deckId} = useParams();\r\n    const [deck, setDeck] = useState({});\r\n    const [name, setName] = useState(null);\r\n    const [description, setDescription] = useState('');\r\n    const history = useHistory();\r\n    \r\n\r\n    useEffect( () => {\r\n        const getDeck = async () => {\r\n            const data = await readDeck(deckId);\r\n            let deckData =  await data;\r\n            setDeck(deckData);\r\n            let name = await deckData.name;\r\n            setName(name);\r\n            let description = await deckData.description;\r\n            setDescription(description);\r\n    }\r\n        getDeck();\r\n        \r\n    }, [deckId])\r\n\r\n    const handleSubmit = async () => {\r\n        deck.description = description;\r\n        deck.name = name;\r\n        await updateDeck(deck)\r\n        history.goBack();\r\n    }\r\n\r\n\r\nif(name !== null){\r\n\r\n    console.log(deck)\r\n\r\n    return(\r\n        <div>\r\n        <Breadcrumbs deck={deck}/>\r\n\r\n        <div className='card p-3'>\r\n                <h2>Edit Deck: <br/><span style={{opacity:'50%'}}>{name}</span></h2>\r\n                <form className='form-group'>\r\n\r\n                    <label htmlFor='name'>Name:</label>\r\n\r\n                    <input type='text' name='name' id='name' value={name} onChange={(e)=>setName(e.target.value)}\r\n                    placeholder='Deck Name'className='form-control'>\r\n                    </input>\r\n\r\n                    <label htmlFor='description' className='mt-3'>Description:</label>\r\n\r\n                    <textarea type='textarea' name='description' id='description' \r\n                    className='form-control' rows='3'\r\n                    value={description} onChange={(e)=>setDescription(e.target.value)}>\r\n                    </textarea>\r\n\r\n                </form>\r\n            </div>\r\n            <button className='btn mt-3' htmlFor='submit'\r\n            style={{border:'3px'}}\r\n            onClick={handleSubmit}\r\n            >\r\n            ✔ Submit\r\n            </button>\r\n            <Link to={`/decks/${deck.id}`}>\r\n                <button className='btn mt-3'\r\n                style={{opacity:'50%'}}>\r\n                ❌Cancel\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    );\r\n} else return(<p>Loading!</p>)\r\n};\r\n\r\nexport default EditDeck;"]},"metadata":{},"sourceType":"module"}