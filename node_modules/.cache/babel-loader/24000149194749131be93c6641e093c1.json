{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Schen\\\\thinkful\\\\vscode\\\\react-projects\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\ViewDeck\\\\DeckHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { listDecks } from '../../utils/api';\nimport { deleteDeck } from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeckHeader = ({\n  deck\n}) => {\n  _s();\n\n  const [decks, setDecks] = useState([]);\n  useEffect(() => {\n    const getDecks = async () => {\n      const data = await listDecks();\n      let deckData = data;\n      setDecks([...deckData]);\n    };\n\n    getDecks();\n  }, []);\n\n  const handleDeckDelete = () => {\n    let deckToDelete = deck;\n    let futureDecks = decks.filter(deck => deck !== deckToDelete);\n    let confirm = window.confirm(`Do you want to delete the deck \"${deckToDelete.name}\"? \\n\\n This is permanent.`);\n\n    if (confirm) {\n      deleteDeck(deckToDelete.id);\n      setDecks([...futureDecks]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: deck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: deck.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/edit`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"\\u270F Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/study`,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"\\uD83D\\uDCDA Study\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 51\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deck.id}/cards/new`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"\\u2795 Add Cards\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleDeckDelete,\n        children: \"\\u274C Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeckHeader, \"f+alwG6Mds7XNzaPIkXWhs/xDB4=\");\n\n_c = DeckHeader;\nexport default DeckHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckHeader\");","map":{"version":3,"sources":["C:/Users/Schen/thinkful/vscode/react-projects/Project_Flashcards_Qualified_1/src/Layout/ViewDeck/DeckHeader.js"],"names":["React","useState","useEffect","Link","listDecks","deleteDeck","DeckHeader","deck","decks","setDecks","getDecks","data","deckData","handleDeckDelete","deckToDelete","futureDecks","filter","confirm","window","name","id","description","display","justifyContent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMQ,QAAQ,GAAG,YAAY;AACzB,YAAMC,IAAI,GAAG,MAAMP,SAAS,EAA5B;AACA,UAAIQ,QAAQ,GAAID,IAAhB;AACAF,MAAAA,QAAQ,CAAC,CAAC,GAAGG,QAAJ,CAAD,CAAR;AACH,KAJD;;AAMAF,IAAAA,QAAQ;AAEX,GATQ,EASP,EATO,CAAT;;AAWA,QAAMG,gBAAgB,GAAG,MAAK;AACtB,QAAIC,YAAY,GAAGP,IAAnB;AACA,QAAIQ,WAAW,GAAGP,KAAK,CAACQ,MAAN,CAAaT,IAAI,IAAIA,IAAI,KAAKO,YAA9B,CAAlB;AACA,QAAIG,OAAO,GAAGC,MAAM,CAACD,OAAP,CAAgB,mCAAkCH,YAAY,CAACK,IAAK,4BAApE,CAAd;;AAEA,QAAGF,OAAH,EAAW;AACPZ,MAAAA,UAAU,CAACS,YAAY,CAACM,EAAd,CAAV;AACAX,MAAAA,QAAQ,CAAC,CAAC,GAAGM,WAAJ,CAAD,CAAR;AACH;AACJ,GATL;;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA;AAAA,gBAAKR,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA,gBAAIZ,IAAI,CAACc;AAAT;AAAA;AAAA;AAAA;AAAA,YAFA,eAIA;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,cAAc,EAAE;AAAlC,OAAZ;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAAShB,IAAI,CAACa,EAAG,OAA5B;AAAA,+BAAoC;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASb,IAAI,CAACa,EAAG,QAA5B;AAAA,qCAAsC;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASb,IAAI,CAACa,EAAG,YAA5B;AAAA,+BAAyC;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzC;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAwB,QAAA,OAAO,EAAEP,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,eAUA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxCD;;GAAMP,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {listDecks} from '../../utils/api';\r\nimport {deleteDeck} from '../../utils/api';\r\n\r\nconst DeckHeader = ({deck}) => {\r\n    const [decks, setDecks] = useState([])\r\n    \r\n    useEffect(()=> {\r\n        const getDecks = async () => {\r\n            const data = await listDecks();\r\n            let deckData =  data;\r\n            setDecks([...deckData])\r\n        }\r\n\r\n        getDecks();\r\n        \r\n    },[])\r\n\r\n    const handleDeckDelete = () =>{\r\n            let deckToDelete = deck\r\n            let futureDecks = decks.filter(deck => deck !== deckToDelete)\r\n            let confirm = window.confirm(`Do you want to delete the deck \"${deckToDelete.name}\"? \\n\\n This is permanent.`)\r\n    \r\n            if(confirm){\r\n                deleteDeck(deckToDelete.id)\r\n                setDecks([...futureDecks])\r\n            }\r\n        }\r\n    \r\n\r\n    return (\r\n        <div className='container'>\r\n        <h3>{deck.name}</h3>\r\n        <p>{deck.description}</p>\r\n        \r\n        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n            <Link to={`/decks/${deck.id}/edit`}><button className='btn'>‚úè Edit</button></Link>\r\n            <Link to={`/decks/${deck.id}/study`}> <button className='btn'>üìö Study</button> </Link>\r\n            <Link to={`/decks/${deck.id}/cards/new`}><button className='btn'>‚ûï Add Cards</button></Link>\r\n            <button className='btn' onClick={handleDeckDelete}>‚ùå Delete</button>\r\n        </div>\r\n        <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeckHeader;"]},"metadata":{},"sourceType":"module"}