{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Schen\\\\thinkful\\\\vscode\\\\react-projects\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\Study\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { readDeck } from '../../utils/api';\nimport StudyCard from './components/StudyCard';\nimport Breadcrumbs from '../Breadcrumbs';\nimport NextButton from './components/NextButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Study = () => {\n  _s();\n\n  const {\n    deckId\n  } = useParams();\n  const [deck, setDeck] = useState({});\n  const [cardIndex, setCardIndex] = useState(0);\n  const [front, setFront] = useState(true);\n  useEffect(() => {\n    const getDeck = async () => {\n      const data = await readDeck(deckId);\n      let deckData = await data;\n      setDeck(deckData);\n    };\n\n    getDeck();\n  }, [deckId]);\n\n  if (deck.name) {\n    let {\n      cards\n    } = deck;\n    let deckLength = cards.length;\n    let currentCard = cards.find((card, index) => index === cardIndex);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n        deck: deck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Study:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: deck.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(StudyCard, {\n        deckId: deckId,\n        cardIndex: cardIndex,\n        deckLength: deckLength,\n        front: front,\n        setFront: setFront,\n        currentCard: currentCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        front: front,\n        setFront: setFront,\n        cardIndex: cardIndex,\n        setCardIndex: setCardIndex,\n        deckLength: deckLength\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 15\n  }, this);\n};\n\n_s(Study, \"VdhfBc/0YqN35rYA9Qvmh6He69E=\", false, function () {\n  return [useParams];\n});\n\n_c = Study;\nexport default Study;\n\nvar _c;\n\n$RefreshReg$(_c, \"Study\");","map":{"version":3,"sources":["C:/Users/Schen/thinkful/vscode/react-projects/Project_Flashcards_Qualified_1/src/Layout/Study/index.js"],"names":["React","useState","useEffect","useParams","readDeck","StudyCard","Breadcrumbs","NextButton","Study","deckId","deck","setDeck","cardIndex","setCardIndex","front","setFront","getDeck","data","deckData","name","cards","deckLength","length","currentCard","find","card","index"],"mappings":";;;AAAA,OAAQA,KAAR,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAAyB,kBAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM;AAACC,IAAAA;AAAD,MAAWN,SAAS,EAA1B;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAE,MAAM;AACb,UAAMc,OAAO,GAAG,YAAY;AACxB,YAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACK,MAAD,CAA3B;AACA,UAAIS,QAAQ,GAAI,MAAMD,IAAtB;AACAN,MAAAA,OAAO,CAACO,QAAD,CAAP;AACP,KAJG;;AAKAF,IAAAA,OAAO;AAEV,GARQ,EAQN,CAACP,MAAD,CARM,CAAT;;AAUA,MAAIC,IAAI,CAACS,IAAT,EAAe;AAEf,QAAI;AAACC,MAAAA;AAAD,QAAUV,IAAd;AACA,QAAIW,UAAU,GAAGD,KAAK,CAACE,MAAvB;AACA,QAAIC,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAW,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,KAAKd,SAAtC,CAAlB;AAIA,wBACI;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEF;AAAnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKA,IAAI,CAACS;AAAV;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI,QAAC,SAAD;AACA,QAAA,MAAM,EAAEV,MADR;AAEA,QAAA,SAAS,EAAEG,SAFX;AAGA,QAAA,UAAU,EAAES,UAHZ;AAIA,QAAA,KAAK,EAAEP,KAJP;AAKA,QAAA,QAAQ,EAAEC,QALV;AAMA,QAAA,WAAW,EAAEQ;AANb;AAAA;AAAA;AAAA;AAAA,cALJ,eAcI,QAAC,UAAD;AACA,QAAA,KAAK,EAAET,KADP;AAEA,QAAA,QAAQ,EAAEC,QAFV;AAGA,QAAA,SAAS,EAAEH,SAHX;AAIA,QAAA,YAAY,EAAEC,YAJd;AAKA,QAAA,UAAU,EAAEQ;AALZ;AAAA;AAAA;AAAA;AAAA,cAdJ;AAAA,oBADJ;AA2BH,GAnCG,MAmCG,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEN,CArDD;;GAAMb,K;UACeL,S;;;KADfK,K;AAuDN,eAAeA,KAAf","sourcesContent":["import  React, {useState, useEffect } from 'react';\r\nimport { useParams} from 'react-router-dom';\r\nimport { readDeck } from '../../utils/api';\r\n\r\nimport StudyCard from './components/StudyCard';\r\nimport Breadcrumbs from '../Breadcrumbs';\r\nimport NextButton from './components/NextButton';\r\n\r\nconst Study = () => {\r\n    const {deckId} = useParams();\r\n    const [deck, setDeck] = useState({});\r\n    const [cardIndex, setCardIndex] = useState(0);\r\n    const [front, setFront] = useState(true);\r\n\r\n    useEffect( () => {\r\n        const getDeck = async () => {\r\n            const data = await readDeck(deckId);\r\n            let deckData =  await data;\r\n            setDeck(deckData);\r\n    }\r\n        getDeck();\r\n        \r\n    }, [deckId])\r\n\r\n    if (deck.name) {\r\n\r\n    let {cards} = deck\r\n    let deckLength = cards.length\r\n    let currentCard = cards.find((card, index) => index === cardIndex )\r\n\r\n\r\n\r\n    return(\r\n        <>\r\n            <Breadcrumbs deck={deck}/>\r\n            <h2>Study:</h2>\r\n            <h3>{deck.name}</h3>\r\n\r\n            <StudyCard\r\n            deckId={deckId}\r\n            cardIndex={cardIndex}\r\n            deckLength={deckLength}\r\n            front={front}\r\n            setFront={setFront}\r\n            currentCard={currentCard}\r\n            />\r\n\r\n            <NextButton \r\n            front={front}\r\n            setFront={setFront}\r\n            cardIndex={cardIndex}\r\n            setCardIndex={setCardIndex}\r\n            deckLength={deckLength}\r\n            />\r\n\r\n\r\n        </>\r\n    );\r\n\r\n} else return(<p>Loading...</p>)\r\n\r\n}\r\n\r\nexport default Study;"]},"metadata":{},"sourceType":"module"}